IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AppUser] (
    [Id] nvarchar(450) NOT NULL,
    [IsLocked] bit NOT NULL,
    [UserName] nvarchar(max) NULL,
    [NormalizedUserName] nvarchar(max) NULL,
    [Email] nvarchar(max) NULL,
    [NormalizedEmail] nvarchar(max) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AppUser] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Medicines] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [ExpiryDate] datetime2 NOT NULL,
    [InventoryQuantity] int NOT NULL,
    [Unit] nvarchar(max) NULL,
    [Prescription] nvarchar(max) NULL,
    CONSTRAINT [PK_Medicines] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [RoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(max) NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_RoleClaims] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Roles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(max) NULL,
    [NormalizedName] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [UserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(max) NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_UserClaims] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [UserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_UserRoles] PRIMARY KEY ([UserId], [RoleId])
);
GO

CREATE TABLE [Customers] (
    [Id] nvarchar(450) NOT NULL,
    [PhoneNumber] nvarchar(max) NOT NULL,
    [FullName] nvarchar(max) NOT NULL,
    [Address] nvarchar(max) NOT NULL,
    [DayOfBirth] datetime2 NOT NULL,
    [AccountId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Customers] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Customers_AppUser_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [AppUser] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [Dentists] (
    [Id] nvarchar(450) NOT NULL,
    [FullName] nvarchar(max) NOT NULL,
    [PhoneNumber] nvarchar(max) NOT NULL,
    [AccountId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Dentists] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Dentists_AppUser_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [AppUser] ([Id])
);
GO

CREATE TABLE [Employees] (
    [Id] nvarchar(450) NOT NULL,
    [FullName] nvarchar(max) NOT NULL,
    [PhoneNumber] nvarchar(max) NOT NULL,
    [AccountId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Employees_AppUser_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [AppUser] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AppointmentSchedules] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentTime] datetime2 NOT NULL,
    [DentistId] nvarchar(450) NOT NULL,
    [CustomerId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AppointmentSchedules] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AppointmentSchedules_Customers_CustomerId] FOREIGN KEY ([CustomerId]) REFERENCES [Customers] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AppointmentSchedules_Dentists_DentistId] FOREIGN KEY ([DentistId]) REFERENCES [Dentists] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [ExaminationSchedules] (
    [Id] int NOT NULL IDENTITY,
    [ExaminationTime] datetime2 NOT NULL,
    [IsAvailable] bit NOT NULL,
    [DentistId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_ExaminationSchedules] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ExaminationSchedules_Dentists_DentistId] FOREIGN KEY ([DentistId]) REFERENCES [Dentists] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [MedicalRecords] (
    [Id] int NOT NULL,
    [SequenceNumber] int NOT NULL,
    [ExaminationDate] datetime2 NOT NULL,
    [Service] nvarchar(max) NOT NULL,
    [CustomerId] nvarchar(450) NOT NULL,
    [CreatedByDentistId] nvarchar(450) NULL,
    [ExamDentistDentistId] nvarchar(450) NULL,
    CONSTRAINT [PK_MedicalRecords] PRIMARY KEY ([Id], [SequenceNumber]),
    CONSTRAINT [FK_MedicalRecords_Customers_CustomerId] FOREIGN KEY ([CustomerId]) REFERENCES [Customers] ([Id]),
    CONSTRAINT [FK_MedicalRecords_Dentists_CreatedByDentistId] FOREIGN KEY ([CreatedByDentistId]) REFERENCES [Dentists] ([Id]),
    CONSTRAINT [FK_MedicalRecords_Dentists_ExamDentistDentistId] FOREIGN KEY ([ExamDentistDentistId]) REFERENCES [Dentists] ([Id])
);
GO

CREATE TABLE [Medicine_MedicalRecords] (
    [MedicineId] int NOT NULL,
    [MedicalRecordId] int NOT NULL,
    [SequenceNumber] int NOT NULL,
    [MedicineQuantity] int NOT NULL,
    [Sold] bit NULL,
    CONSTRAINT [PK_Medicine_MedicalRecords] PRIMARY KEY ([MedicineId], [MedicalRecordId], [SequenceNumber]),
    CONSTRAINT [FK_Medicine_MedicalRecords_MedicalRecords_MedicalRecordId_SequenceNumber] FOREIGN KEY ([MedicalRecordId], [SequenceNumber]) REFERENCES [MedicalRecords] ([Id], [SequenceNumber]) ON DELETE CASCADE,
    CONSTRAINT [FK_Medicine_MedicalRecords_Medicines_MedicineId] FOREIGN KEY ([MedicineId]) REFERENCES [Medicines] ([Id]) ON DELETE CASCADE
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'IsLocked', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AppUser]'))
    SET IDENTITY_INSERT [AppUser] ON;
INSERT INTO [AppUser] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [IsLocked], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (N'c6647262-ef40-40b3-af33-f89f80d35378', 0, N'78e33993-579e-4d71-ae86-3cdf52f11372', NULL, CAST(0 AS bit), CAST(0 AS bit), CAST(0 AS bit), NULL, NULL, N'ADMIN123', N'AQAAAAIAAYagAAAAEGjHTCsGF6xOUVRCh0JPGqJ2imxe/1uGtUg6UdlJu7HVTpQj2DtYSI7Xb71My/C97Q==', NULL, CAST(0 AS bit), N'873f2ab4-0eef-4645-b4c4-5efd0abeeec0', CAST(0 AS bit), N'admin123');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'IsLocked', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AppUser]'))
    SET IDENTITY_INSERT [AppUser] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[Roles]'))
    SET IDENTITY_INSERT [Roles] ON;
INSERT INTO [Roles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'31234cbd-ca9b-45a2-9028-192615dc638a', NULL, N'Employee', N'EMPLOYEE'),
(N'39934cbd-ca9b-43a2-9028-192615dc638a', NULL, N'Dentist', N'DENTIST'),
(N'4fa697ec-6c32-4116-8c01-3a202463703f', NULL, N'Customer', N'CUSTOMER'),
(N'9b542a62-e9c0-4073-aa96-4332230e32bc', NULL, N'Admin', N'ADMIN');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[Roles]'))
    SET IDENTITY_INSERT [Roles] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[UserRoles]'))
    SET IDENTITY_INSERT [UserRoles] ON;
INSERT INTO [UserRoles] ([RoleId], [UserId])
VALUES (N'9b542a62-e9c0-4073-aa96-4332230e32bc', N'c6647262-ef40-40b3-af33-f89f80d35378');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[UserRoles]'))
    SET IDENTITY_INSERT [UserRoles] OFF;
GO

CREATE INDEX [IX_AppointmentSchedules_CustomerId] ON [AppointmentSchedules] ([CustomerId]);
GO

CREATE INDEX [IX_AppointmentSchedules_DentistId] ON [AppointmentSchedules] ([DentistId]);
GO

CREATE INDEX [IX_Customers_AccountId] ON [Customers] ([AccountId]);
GO

CREATE INDEX [IX_Dentists_AccountId] ON [Dentists] ([AccountId]);
GO

CREATE INDEX [IX_Employees_AccountId] ON [Employees] ([AccountId]);
GO

CREATE INDEX [IX_ExaminationSchedules_DentistId] ON [ExaminationSchedules] ([DentistId]);
GO

CREATE INDEX [IX_MedicalRecords_CreatedByDentistId] ON [MedicalRecords] ([CreatedByDentistId]);
GO

CREATE INDEX [IX_MedicalRecords_CustomerId] ON [MedicalRecords] ([CustomerId]);
GO

CREATE INDEX [IX_MedicalRecords_ExamDentistDentistId] ON [MedicalRecords] ([ExamDentistDentistId]);
GO

CREATE INDEX [IX_Medicine_MedicalRecords_MedicalRecordId_SequenceNumber] ON [Medicine_MedicalRecords] ([MedicalRecordId], [SequenceNumber]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231213162544_initmigration', N'7.0.14');
GO

COMMIT;
GO

